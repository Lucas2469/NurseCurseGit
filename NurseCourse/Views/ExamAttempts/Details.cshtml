@model NurseCourse.Models.Module

@{
    ViewData["Title"] = "Details";
    var userId = Context.Session.GetInt32("UserId");
}

<div>
    <h3><b>@Html.DisplayFor(model => model.Name) - Curso: @Html.DisplayFor(model => model.Course.Name)</b></h3>
    <hr />
    <div class="container mt-4">
        <div class="row mb-3">
            <div class="col-10">
                <h4 class="fw-bold text-start">@Html.DisplayFor(model => model.Description)</h4>
            </div>
            <div class="col-2 text-end">
                @if (!string.IsNullOrEmpty(Model.PdfPath))
                {
                    <a class="btn btn-outline-danger" href="@Model.PdfPath" target="_blank">
                        Descargar PDF
                    </a>
                    <button id="loadPdfContent" data-pdf-path="@Model.PdfPath" hidden></button>
                }
            </div>
        </div>
        <div class="row justify-content-start mb-4">
            <div class="col-md-8">
                @if (!string.IsNullOrEmpty(Model.VideoPath))
                {
                    <div class="ratio ratio-16x9">
                        @Html.Raw(Model.VideoPath)
                    </div>
                }
                else
                {
                    <p class="text-start">No hay un video disponible.</p>
                }
            </div>
        </div>
        <!-- Sección para los exámenes -->
        <div>
            <div class="d-flex justify-content-between align-items-center">
                <h4><b>Evaluaciones</b></h4>
            </div>
            <div class="row">
                @if (Model.Exams != null && Model.Exams.Any())
                {
                    @foreach (var exam in Model.Exams)
                    {
                        var attempts = exam.ExamAttempts.Where(a => a.UserId == userId).OrderBy(a => a.AttemptDate).ToList();
                        var attemptCount = attempts.Count;

                        var isApproved = attempts.Any(a => a.Score >= 51);
                        var highestScore = attempts.DefaultIfEmpty(new ExamAttempt { Score = 0 }).Max(a => a.Score);

                        <div class="col-12 mb-3">
                            <div class="card h-100 bg-dark text-white border-0 shadow opacity-75">
                                <div class="card-body d-flex flex-column">
                                    <h4 class="card-title text-light mb-2">@exam.Name</h4>

                                    @if (attemptCount == 0)
                                    {
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="text-light">No has realizado este examen aún.</span>
                                            <a target="_blank" href="@Url.Action("EvaluateExam", "ExamAttempts", new { id = exam.Id })" class="btn btn-primary">
                                                Evaluar
                                            </a>
                                        </div>
                                    }
                                    else if (isApproved)
                                    {
                                        <!-- Mostrar mensaje de aprobación y la nota más alta obtenida -->
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="text-light">Aprobaste con una nota de: @highestScore%</span>
                                            <span class="btn btn-success disabled">Aprobado</span>
                                        </div>
                                    }
                                    else if (attemptCount == 1)
                                    {
                                        var firstAttempt = attempts.First();
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="text-light">Nota del primer intento: @firstAttempt.Score%</span>
                                            <a target="_blank" href="@Url.Action("EvaluateExam", "ExamAttempts", new { id = exam.Id })" class="btn btn-primary">
                                                Reevaluar
                                            </a>
                                        </div>
                                    }
                                    else if (attemptCount >= 2)
                                    {
                                        var secondAttempt = attempts.Last();
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="text-light">Nota del último intento: @secondAttempt.Score%</span>
                                            <span class="btn btn-secondary disabled">Máximo de intentos alcanzado</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <p class="text-muted">Este módulo aún no tiene exámenes asignados.</p>
                    </div>
                }
            </div>
        </div>
        <hr />
        <h4><b>Contenido del Curso</b></h4>
        <div class="row">
            <div class="col-md-12" id="pdf-content">
                <p class="text-start">Cargando...</p>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#loadPdfContent').click(function () {
            const pdfPath = $(this).data('pdf-path');

            $.ajax({
                url: '@Url.Action("GetPdfContent", "PDF")',
                type: 'POST',
                data: { pdfPath: pdfPath },
                success: function (response) {
                    $('#pdf-content').html('<pre>' + response.content + '</pre>');
                },
                error: function () {
                    $('#pdf-content').html('<p>Error al cargar el contenido del PDF.</p>');
                }
            });
        });

        setTimeout(function () {
            $('#loadPdfContent').trigger('click');
        }, 500);
    });
</script>

